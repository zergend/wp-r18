.menu-vertical {
  position: relative;
  overflow: hidden;
  margin-top: 0;
  border-top: 1px solid @light-text-color;
  padding-top: 30px;
  @media @tablet-widths {
    padding-top: 0;
    margin-top: 10px;
  }

  &--info {
    margin-top: 0;
    padding-top: 0;
    @media @tablet-widths {
      margin-top: 50px;
    }
  }
  
  & h3 {
    margin: 0;
    padding: 10px 5px;
    color: @light-text-color;
    border-bottom: 1px solid @light-text-color;
  }

  &__toggle {
    position: absolute;
    z-index: 45;
    top: 0;
    right: 0;

    display: none;

    width: 40px;
    height: 30px;

    cursor: pointer;

    border: none;
    background-color: @rekord-red;
    font-size: 0;
  }

  &--closed &__toggle::before {
    position: absolute;
    top: 10px;
    left: 10px;

    width: 20px;
    height: 1px;

    content: "";

    background-color: #fff;
    box-shadow: 0 4px 0 0 #fff,
                0 8px 0 0 #fff;
  }

  &--closed &__toggle:active::before {
    background-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 4px 0 0 rgba(255, 255, 255, 0.3),
                0 8px 0 0 rgba(255, 255, 255, 0.3);
  }

  &--opened &__toggle {
    &::before,
    &::after {
      position: absolute;
      top: 14px;
      left: 5px;

      width: 30px;
      height: 1px;

      content: "";

      background-color: #fff;
    }
    &::before {
      transform: rotate(45deg);

      box-shadow: none;
    }
    &::after {
      transform: rotate(-45deg);
    }
    &:active::before,
    &:active::after {
      background-color: rgba(255, 255, 255, 0.3);
    }
  }
  
  @media @mobile-widths-only {
    &--closed &__item {
      display: none;
    }

    &__toggle {
      display: block;
    }
  }

  &--nojs &__toggle {
    display: none;
  }

  &--nojs &__item {
    display: block;
  }

   
  &__item {
    position: relative;
    
    &.menu-item-has-children>a:hover,
    &.menu-item-has-children:hover {
        cursor: pointer;
        color: @light-text-color;
        background-color: @rekord-red;
    } 
 
    & a {
      display: block;

      padding: 5px 10px;

      color: @light-text-color;
      border-bottom: 1px solid @light-text-color;
      background-color: @rekord-blue;

      font-size: 16px;

      &:hover {
        cursor: pointer;
        background-color: @rekord-red;
      }
    }

    &.sub-menu-item a {
      color: @rekord-blue;
      background-color: @base-bg-color;
      border-bottom: 1px solid #ccc;
      padding-left: 20px;

      &:hover {
        cursor: pointer;
        color: @light-text-color;
        background-color: @rekord-red;
      }
    }

    &.current-menu-item a {
      color: @light-text-color;
      background-color: @rekord-red;
    }
  }

  &--info &__item {

    & a {
      background-color: @rekord-red;

      &:hover {
        text-decoration: underline;
      }
    }
  }

  &__list {
    text-align: left;

    .clear-list-style();  
  }
  
/* =========== css only ================ */
  /* заголовки панелей аккордеона */
  & .main-menu-item {
    /* font-size: 16px;
    font-weight: 300;
    letter-spacing: 1px;
    display: block;
    margin: 0;
    padding: 10px 25px;
    cursor: pointer;
    color: #f4f4f4;
    background: #2d8bbb;
    border-top: 1px solid #3face4;
    border-bottom: 1px solid #2479a5;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    */
  }
  /* заголовки панелей аккордеона при наведении
  * в данном варианте не срабатывает
  */
  /* & h2:hover {
    display: block;
    background-color: #005049;
  }
  */

  /* Формируем блоки с содерханием */
  .menu-item-has-children {
  position: relative;
  overflow: hidden;
  max-height: 800px;
  opacity: 1;
  transform: translate(0, 0);
  }

  /* оформляем параграфы */
  .menu-item-has-children a {
  /* color: rgba(48, 69, 92, 0.8);
  font-size: 13px;
  line-height: 20px;
  letter-spacing: 1px;
  padding: 0 20px
  */
  }

  /* Позаботимся о небольших экранах */
  /* @media (max-width: 550px) {
  & {
    box-sizing: border-box;
    transform: translate(0, 0);
    max-width: 100%;
    min-height: 100%;
    margin: 0;
    left: 0;
  }
  } */

  /* Формируем неупорядоченный список */
  & ul {
  /* list-style: none;
  perspective: 900;
  padding: 0;
  margin: 0;
  */
  }

  /* Определяем и формируем отдельный элемент списка 
  * в который поместим скрытый флажек,
  * заголовок панелей и блок с содержанием
  */
  & ul li.menu-item-has-children {
  position: relative;
  padding: 0;
  margin: 0;
  }

  /* устанавливаем время ожидания перед воспроизведением анимации 
  * на основе нумерации в дереве элементов
  */
  & ul li.menu-item-has-children:nth-of-type(1) {
  animation-delay: 0.5s;
  }
  & ul li.menu-item-has-children:nth-of-type(2) {
  animation-delay: 0.75s;
  }
  & ul li.menu-item-has-children:nth-of-type(3) {
  animation-delay: 1s;
  }
  & ul li.menu-item-has-children:last-of-type {
  padding-bottom: 0;
  }

  /* Сформируем  указатель переключения состояния аккордеона */
  & ul > li.menu-item-has-children i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 10px;
  /* расположим указатель на панели заголовка справа */
  right: 10px;  
  }

  /* "Рисуем " сам указатель */
  & ul > li.menu-item-has-children i:before, & ul > li.menu-item-has-children i:after {
  content: "";
  position: absolute;
  background-color: #eee;
  width: 3px;
  height: 9px;
  }
  /* Добавляем элемент трансформации указателя при переключении */
  & ul > li.menu-item-has-children i:before {
  transform: translate(-2px, 0) rotate(45deg);
  }
  & ul > li.menu-item-has-children i:after {
  transform: translate(2px, 0) rotate(-45deg);
  }

  /* Делаем чекбокс скрытым*/
  & ul li.menu-item-has-children input[type=checkbox] {
  position: absolute;
  cursor: pointer;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  opacity: 0;
  }
  /* Когда у флажка установлен checked  
  * блок с содержанием скрыт
  */
  & ul li.menu-item-has-children input[type=checkbox]:checked ~ ul.sub-menu {
  margin-top: 0;
  max-height: 0;
  opacity: 0;
  transform: translate(0, 50%);
  }
  /* А указатель показывает вниз */
  & ul li.menu-item-has-children input[type=checkbox]:checked ~ i:before {
  transform: translate(2px, 0) rotate(45deg);
  }
  & ul li.menu-item-has-children input[type=checkbox]:checked ~ i:after {
  transform: translate(-2px, 0) rotate(-45deg);
  }
  /*  Устанавливаем эффект перехода
  * между двумя состояниями указателя 
  */
  .menu-item-has-children, ul li.menu-item-has-children i:before, ul li.menu-item-has-children i:after {
    transition: all 0.5s ease-in-out;
  }
}
